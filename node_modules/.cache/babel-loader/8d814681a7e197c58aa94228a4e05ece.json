{"ast":null,"code":"var _jsxFileName = \"/Users/priyamsuthar/Documents/React/react-redux-complete-playlist-lesson-3/weather-forecast/src/WeatherDay.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nexport default class WeatherDay extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      days: []\n    };\n\n    this.returnDay = count => {\n      switch (count) {\n        case 0:\n          return \"Sun\";\n\n        case 1:\n          return \"Mon\";\n\n        case 2:\n          return \"Tue\";\n\n        case 3:\n          return \"Wed\";\n\n        case 4:\n          return \"Thu\";\n\n        case 5:\n          return \"Fri\";\n\n        case 6:\n          return \"Sat\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://api.openweathermap.org/data/2.5/forecast?q=Boston&appid=752a9097076906dd26cb036ad826c437&units=imperial&cnt=5').then(res => {\n      console.log(res);\n      this.setState({\n        days: res.data\n      });\n    });\n  }\n\n  render() {\n    const {\n      days\n    } = this.state;\n    console.log(days); // console.log(this.returnDay(new Date(days.list[0])));\n\n    const dayInformation = days.length ? days.map(day => {\n      return React.createElement(\"div\", {\n        className: \"day\",\n        key: day.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.returnDay(new Date(day.list.dt))), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Low: \", day.min, \"\\xB0 F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, \"High: \", day.max, \"\\xB0 F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faSun,\n        size: \"1x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, \"No posts yet\");\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 col-md-offset-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"current\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"div\", {\n      className: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"Boston\"), React.createElement(\"div\", {\n      className: \"temp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"67\\xB0 \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"F\")), React.createElement(\"div\", {\n      className: \"wind\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"WIND:\")), \" 22 km/h\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"div\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faSun,\n      size: \"2x\",\n      color: \"yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"future\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, dayInformation)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/priyamsuthar/Documents/React/react-redux-complete-playlist-lesson-3/weather-forecast/src/WeatherDay.js"],"names":["React","Component","FontAwesomeIcon","faSun","axios","WeatherDay","state","days","returnDay","count","componentDidMount","get","then","res","console","log","setState","data","render","dayInformation","length","map","day","id","Date","list","dt","min","max"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\n\nexport default class WeatherDay extends Component {\n    // state = {\n    //     currentWeather : '24',\n    //     days : [\n    //         {id:'1',day: 'Mon', min: '13', max:'34'},\n    //         {id:'2',day: 'Tue', min: '13', max:'34'},\n    //         {id:'3',day: 'Wed', min: '13', max:'34'},\n    //         {id:'4',day: 'Thu', min: '13', max:'34'},\n    //         {id:'5',day: 'Fri', min: '13', max:'34'},\n    //     ]\n    // }\n    state = {\n        days: []\n    }\n    componentDidMount(){\n        axios.get('http://api.openweathermap.org/data/2.5/forecast?q=Boston&appid=752a9097076906dd26cb036ad826c437&units=imperial&cnt=5')\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    days: res.data\n                })\n            })\n\n    }\n\n    returnDay = (count) =>{\n        switch(count){\n            case 0:\n                return \"Sun\";\n            case 1:\n                return \"Mon\";\n            case 2:\n                return \"Tue\";\n            case 3:\n                return \"Wed\";\n            case 4:\n                return \"Thu\";\n            case 5:\n                return \"Fri\";\n            case 6:\n                return \"Sat\";\n        }\n    }\n\n    render() {\n\n        \n        const {days} = this.state;\n        console.log(days)\n        // console.log(this.returnDay(new Date(days.list[0])));\n        const dayInformation = days.length ? (\n            days.map(day =>{\n                return (\n                    <div className=\"day\" key={day.id}>\n                       <h3>{this.returnDay(new Date(day.list.dt))}</h3>\n                            {/* <Link to={'/'+day.id}> */}\n                                {/* <span className=\"card-title red-text\">{day.name}</span> */}\n                            {/* </Link> */}\n                        <p>Low: {day.min}&deg; F</p>\n                        <p>High: {day.max}&deg; F</p>\n                        <p><FontAwesomeIcon icon={faSun} size=\"1x\"/></p>\n                       \n                    </div>\n                )\n            })\n        ) : (\n            <div className=\"center\">No posts yet</div>\n        );\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-md-offset-4\">\n                        <div className=\"weather\">\n                            <div className=\"current\">\n                                <div className=\"info\">\n                                    <div>&nbsp;</div>\n                                    <div className=\"city\">Boston</div>\n                                    <div className=\"temp\">67&deg; <small>F</small></div>\n                                    <div className=\"wind\"><small><small>WIND:</small></small> 22 km/h</div>\n                                    <div>&nbsp;</div>\n                                </div>\n                                <div className=\"icon\">\n                                    <FontAwesomeIcon icon={faSun} size=\"2x\" color=\"yellow\"/>\n                                </div>\n                            </div>\n                            <div className=\"future\">\n                                {dayInformation}\n                                {/* <div className=\"day\">\n                                    <h4>MONDAY</h4>\n                                    <p><FontAwesomeIcon icon={faSun} size=\"2x\"/></p>\n                                    <div>\n                                        <p>Low: 23&deg; F</p>\n                                        <p>High: 77&deg; F</p>\n                                    </div>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Tue</h3>\n                                    <p><span className=\"wi-showers\"></span></p>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Wed</h3>\n                                    <p><span className=\"wi-rain\"></span></p>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Mon</h3>\n                                    <p><FontAwesomeIcon icon={faSun} size=\"2x\"/></p>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Mon</h3>\n                                    <p><FontAwesomeIcon icon={faSun} size=\"2x\"/></p>\n                                </div> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}