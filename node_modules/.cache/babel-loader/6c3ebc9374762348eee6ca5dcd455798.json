{"ast":null,"code":"var _jsxFileName = \"/Users/priyamsuthar/Documents/React/react-redux-complete-playlist-lesson-3/weather-forecast/src/WeatherDay.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport moment from 'moment';\nexport default class WeatherDay extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      current: {},\n      days: []\n    };\n\n    this.returnDay = date => {\n      const count = date.getUTCDay();\n\n      switch (count) {\n        case 0:\n          return \"Sun\";\n\n        case 1:\n          return \"Mon\";\n\n        case 2:\n          return \"Tue\";\n\n        case 3:\n          return \"Wed\";\n\n        case 4:\n          return \"Thu\";\n\n        case 5:\n          return \"Fri\";\n\n        case 6:\n          return \"Sat\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://api.openweathermap.org/data/2.5/forecast?q=Boston&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial').then(res => {\n      console.log(res);\n      this.setState({\n        days: res.data.list\n      });\n    });\n    axios.get('http://api.openweathermap.org/data/2.5/weather?q=Boston&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial').then(res => {\n      console.log(res);\n      this.setState({\n        current: {\n          temp: res.data.main.temp,\n          icon: res.data.weather[0].icon,\n          wind: res.data.wind.speed,\n          feels_like: res.data.main.feels_like\n        }\n      });\n      console.log(this.state.current);\n    });\n  }\n\n  render() {\n    const {\n      days\n    } = this.state;\n    console.log(days);\n    var i = 0;\n    const dayList = [];\n    var j = 0;\n    var tempMin = 100;\n    var tempMax = -100;\n\n    for (i; i < days.length; i++) {\n      if (days[i].main.temp_min < tempMin) tempMin = days[i].main.temp_min;\n      if (days[i].main.temp_max > tempMax) tempMax = days[i].main.temp_max;\n\n      if (i === 6 || i === 14 || i === 22 || i === 30 || i === 38) {\n        dayList[j] = {\n          dt_txt: days[i].dt_txt,\n          temp_min: tempMin,\n          temp_max: tempMax,\n          icon: days[i].weather[0].icon\n        };\n        j++;\n        tempMin = 100;\n        tempMax = -100;\n      }\n    }\n\n    console.log(dayList); // console.log(this.returnDay(new Date(days.list[0])));\n\n    const dayInformation = dayList.length ? dayList.map(day => {\n      return React.createElement(\"div\", {\n        className: \"day\",\n        key: day.dt_txt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, moment(day.dt_txt).format('ddd')), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95\n        },\n        __self: this\n      }, \"Low: \", day.temp_min, \"\\xB0 F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, \"High: \", day.temp_max, \"\\xB0 F\"), React.createElement(\"img\", {\n        src: \"http://openweathermap.org/img/wn/\" + day.icon + \"@2x.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, \"No posts yet\");\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 col-md-offset-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"current\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"div\", {\n      className: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, \"Boston\"), React.createElement(\"div\", {\n      className: \"temp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.state.current.temp, \"\\xB0 \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"F\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"feels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Feels like:\")), this.state.current.feels_like, \"\\xB0 \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"F\"))), React.createElement(\"div\", {\n      className: \"wind\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121\n      },\n      __self: this\n    }, \"Wind:\")), \" \", this.state.current.wind, \" miles/hour\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"div\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faSun,\n      size: \"2x\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"future\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, dayInformation)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/priyamsuthar/Documents/React/react-redux-complete-playlist-lesson-3/weather-forecast/src/WeatherDay.js"],"names":["React","Component","FontAwesomeIcon","faSun","axios","moment","WeatherDay","state","current","days","returnDay","date","count","getUTCDay","componentDidMount","get","then","res","console","log","setState","data","list","temp","main","icon","weather","wind","speed","feels_like","render","i","dayList","j","tempMin","tempMax","length","temp_min","temp_max","dt_txt","dayInformation","map","day","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\nimport moment from 'moment'\n\nexport default class WeatherDay extends Component {\n    // state = {\n    //     currentWeather : '24',\n    //     days : [\n    //         {id:'1',day: 'Mon', min: '13', max:'34'},\n    //         {id:'2',day: 'Tue', min: '13', max:'34'},\n    //         {id:'3',day: 'Wed', min: '13', max:'34'},\n    //         {id:'4',day: 'Thu', min: '13', max:'34'},\n    //         {id:'5',day: 'Fri', min: '13', max:'34'},\n    //     ]\n    // }\n    state = {\n        current: {},\n        days: []\n    }\n    componentDidMount(){\n        axios.get('http://api.openweathermap.org/data/2.5/forecast?q=Boston&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial')\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    days: res.data.list\n                })\n            })\n        \n        axios.get('http://api.openweathermap.org/data/2.5/weather?q=Boston&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial')\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    current : {temp: res.data.main.temp, icon:res.data.weather[0].icon, wind:res.data.wind.speed, feels_like:res.data.main.feels_like}\n                })\n                console.log(this.state.current)\n            })\n\n    }\n\n    returnDay = (date) =>{\n        const count = date.getUTCDay();\n        switch(count){\n            case 0:\n                return \"Sun\";\n            case 1:\n                return \"Mon\";\n            case 2:\n                return \"Tue\";\n            case 3:\n                return \"Wed\";\n            case 4:\n                return \"Thu\";\n            case 5:\n                return \"Fri\";\n            case 6:\n                return \"Sat\";\n        }\n    }\n\n    render() {\n\n        \n        const {days} = this.state;\n        console.log(days);\n        var i=0;\n        const dayList = [];\n        var j=0;\n        var tempMin = 100;\n        var tempMax = -100;\n        for(i;i<days.length;i++){\n            if(days[i].main.temp_min<tempMin)\n                tempMin = days[i].main.temp_min;\n            if(days[i].main.temp_max>tempMax)\n                tempMax = days[i].main.temp_max;\n            if(i===6 || i===14 || i===22 || i===30 || i===38)\n            {\n                dayList[j]= {dt_txt: days[i].dt_txt, temp_min: tempMin, temp_max: tempMax, icon: days[i].weather[0].icon};\n                j++;\n                tempMin = 100;\n                tempMax = -100;\n            }          \n        }\n        console.log(dayList);\n        // console.log(this.returnDay(new Date(days.list[0])));\n        const dayInformation = dayList.length ? (\n            dayList.map(day =>{\n                return (\n                    <div className=\"day\" key={day.dt_txt}>\n                       <h3>{moment(day.dt_txt).format('ddd')}</h3>\n                            {/* <Link to={'/'+day.id}> */}\n                                {/* <span className=\"card-title red-text\">{day.name}</span> */}\n                            {/* </Link> */}\n                        <p>Low: {day.temp_min}&deg; F</p>\n                        <p>High: {day.temp_max}&deg; F</p>\n                        <img src={\"http://openweathermap.org/img/wn/\"+day.icon+\"@2x.png\"} />\n                        {/* <p><FontAwesomeIcon icon={faSun} size=\"1x\"/></p> */}\n                       \n                    </div>\n                )\n            })\n        ) : (\n            <div className=\"center\">No posts yet</div>\n        );\n\n\n        \n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-md-offset-4\">\n                        <div className=\"weather\">\n                            <div className=\"current\">\n                                <div className=\"info\">\n                                    <div>&nbsp;</div>\n                                    <div className=\"city\">Boston</div>\n                                    <div className=\"temp\">{this.state.current.temp}&deg; <small>F</small><br/>\n                                    <span className=\"feels\"><small><small>Feels like:</small></small>{this.state.current.feels_like}&deg; <small>F</small></span>\n                                    </div>\n                                    <div className=\"wind\"><small><small>Wind:</small></small> {this.state.current.wind} miles/hour</div>\n                                    <div>&nbsp;</div>\n                                </div>\n                                <div className=\"icon\">\n                                    <p><FontAwesomeIcon icon={faSun} size=\"2x\"/></p>\n                                     {/* <img src={\"http://openweathermap.org/img/wn/\"+this.state.current.icon+\"@2x.png\"} /> */}\n                                </div>\n                            </div>\n                            <div className=\"future\">\n                                {dayInformation}\n                                {/* <div className=\"day\">\n                                    <h4>MONDAY</h4>\n                                    <p><FontAwesomeIcon icon={faSun} size=\"2x\"/></p>\n                                    <div>\n                                        <p>Low: 23&deg; F</p>\n                                        <p>High: 77&deg; F</p>\n                                    </div>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Tue</h3>\n                                    <p><span className=\"wi-showers\"></span></p>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Wed</h3>\n                                    <p><span className=\"wi-rain\"></span></p>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Mon</h3>\n                                    <p><FontAwesomeIcon icon={faSun} size=\"2x\"/></p>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Mon</h3>\n                                    <p><FontAwesomeIcon icon={faSun} size=\"2x\"/></p>\n                                </div> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}