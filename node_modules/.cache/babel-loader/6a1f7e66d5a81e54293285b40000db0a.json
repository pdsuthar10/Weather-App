{"ast":null,"code":"var _jsxFileName = \"/Users/priyamsuthar/Documents/React/react-redux-complete-playlist-lesson-3/weather-forecast/src/WeatherDay.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nclass WeatherDay extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      current: {},\n      days: [],\n      content: 'Boston',\n      tempContent: ''\n    };\n\n    this.handleChange = e => {\n      this.setState({\n        tempContent: e.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.callApi(this.state.tempContent);\n      this.setState({\n        content: this.state.tempContent\n      });\n      console.log(this.state.content);\n    };\n  }\n\n  callApi(city) {\n    axios.get('http://api.openweathermap.org/data/2.5/forecast?q=' + city + '&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial').then(res => {\n      console.log(res);\n      this.setState({\n        days: res.data.list\n      });\n    }).catch(error => {\n      console.log(\"Hello worlds\");\n      this.setState({\n        content: 'Please Enter a Valid City Name',\n        days: [],\n        current: {\n          temp: '-',\n          icon: '-',\n          wind: '-',\n          feels_like: '-'\n        }\n      });\n    });\n    axios.get('http://api.openweathermap.org/data/2.5/weather?q=' + city + '&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial').then(res => {\n      console.log(res);\n      this.setState({\n        current: {\n          temp: res.data.main.temp,\n          icon: res.data.weather[0].icon,\n          wind: res.data.wind.speed,\n          feels_like: res.data.main.feels_like\n        }\n      });\n      console.log(this.state.current);\n    }).catch(error => {\n      this.setState({\n        content: 'Please Enter a Valid City Name',\n        days: [],\n        current: {\n          temp: '-',\n          icon: '-',\n          wind: '-',\n          feels_like: '-'\n        }\n      });\n    });\n  }\n\n  componentDidMount() {\n    const city = this.state.content;\n    console.log(city);\n    axios.get('http://api.openweathermap.org/data/2.5/forecast?q=' + city + '&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial').then(res => {\n      console.log(res);\n      this.setState({\n        days: res.data.list\n      });\n    });\n    axios.get('http://api.openweathermap.org/data/2.5/weather?q=Boston&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial').then(res => {\n      console.log(res);\n      this.setState({\n        current: {\n          temp: res.data.main.temp,\n          icon: res.data.weather[0].icon,\n          wind: res.data.wind.speed,\n          feels_like: res.data.main.feels_like\n        }\n      });\n      console.log(this.state.current);\n    });\n  }\n\n  render() {\n    const {\n      days\n    } = this.state;\n    console.log(days);\n    var i = 0;\n    const dayList = [];\n    var j = 0;\n    var tempMin = 100;\n    var tempMax = -100;\n\n    for (i; i < days.length; i++) {\n      if (days[i].main.temp_min < tempMin) tempMin = days[i].main.temp_min;\n      if (days[i].main.temp_max > tempMax) tempMax = days[i].main.temp_max;\n\n      if (i === 6 || i === 14 || i === 22 || i === 30 || i === 38) {\n        dayList[j] = {\n          dt_txt: days[i].dt_txt,\n          temp_min: tempMin,\n          temp_max: tempMax,\n          icon: days[i].weather[0].icon\n        };\n        j++;\n        tempMin = 100;\n        tempMax = -100;\n      }\n    }\n\n    console.log(dayList); // console.log(this.returnDay(new Date(days.list[0])));\n\n    const dayInformation = dayList.length ? dayList.map(day => {\n      return React.createElement(\"div\", {\n        className: \"day\",\n        key: day.dt_txt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/hourly\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, moment(day.dt_txt).format('ddd')), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Low: \", day.temp_min, \"\\xB0 F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"High: \", day.temp_max, \"\\xB0 F\"), React.createElement(\"img\", {\n        src: \"http://openweathermap.org/img/wn/\" + day.icon + \"@2x.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      })));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"No posts yet\");\n    console.log(\"In render:\", this.state.content);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }), React.createElement(\"form\", {\n      className: \"col s12\",\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-field col s4 offset-s4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"city\",\n      type: \"text\",\n      className: \"validate\",\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      for: \"city\",\n      className: \"active\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }, \"Enter a City\")))), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 col-md-offset-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"current\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"div\", {\n      className: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, this.state.content), React.createElement(\"div\", {\n      className: \"temp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, this.state.current.temp, \"\\xB0 \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"F\"), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      className: \"feels\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"Feels like:\")), this.state.current.feels_like, \"\\xB0 \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }, \"F\"))), React.createElement(\"div\", {\n      className: \"wind\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, \"Wind:\")), \" \", this.state.current.wind, \" miles/hour\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"div\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faSun,\n      size: \"2x\",\n      color: \"yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"future\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, dayInformation)))));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    city: state.city\n  };\n};\n\nexport default connect(mapStateToProps)(WeatherDay);","map":{"version":3,"sources":["/Users/priyamsuthar/Documents/React/react-redux-complete-playlist-lesson-3/weather-forecast/src/WeatherDay.js"],"names":["React","Component","FontAwesomeIcon","faSun","axios","moment","connect","Link","WeatherDay","state","current","days","content","tempContent","handleChange","e","setState","target","value","handleSubmit","preventDefault","callApi","console","log","city","get","then","res","data","list","catch","error","temp","icon","wind","feels_like","main","weather","speed","componentDidMount","render","i","dayList","j","tempMin","tempMax","length","temp_min","temp_max","dt_txt","dayInformation","map","day","format","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios';\nimport moment from 'moment';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom'\n\nclass WeatherDay extends Component {\n    state = {\n        current: {},\n        days: [],\n        content: 'Boston',\n        tempContent: ''\n    }\n\n    callApi(city){\n        axios.get('http://api.openweathermap.org/data/2.5/forecast?q='+city+'&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial')\n            .then(res => {\n                console.log(res);   \n                    this.setState({\n                    days: res.data.list\n                })\n            }).catch(error => {\n                console.log(\"Hello worlds\");\n                    this.setState({\n                    content: 'Please Enter a Valid City Name',\n                    days: [],\n                    current: {temp: '-', icon:'-', wind:'-', feels_like:'-'}\n                })\n\n            })\n        \n        axios.get('http://api.openweathermap.org/data/2.5/weather?q='+city+'&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial')\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    current : {temp: res.data.main.temp, icon:res.data.weather[0].icon, wind:res.data.wind.speed, feels_like:res.data.main.feels_like}\n                })\n                console.log(this.state.current)\n            }).catch( error => {\n                this.setState({\n                    content: 'Please Enter a Valid City Name',\n                    days: [],\n                    current: {temp: '-', icon:'-', wind:'-', feels_like:'-'}\n                    \n                })\n\n            })\n    }\n\n    componentDidMount(){\n        const city = this.state.content;\n        console.log(city);\n        axios.get('http://api.openweathermap.org/data/2.5/forecast?q='+city+'&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial')\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    days: res.data.list\n                })\n            })\n        \n        axios.get('http://api.openweathermap.org/data/2.5/weather?q=Boston&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial')\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    current : {temp: res.data.main.temp, icon:res.data.weather[0].icon, wind:res.data.wind.speed, feels_like:res.data.main.feels_like}\n                })\n                console.log(this.state.current)\n            })\n    }\n    handleChange = (e) =>{\n        this.setState({\n            tempContent:e.target.value\n        })\n    }\n\n    handleSubmit = (e) =>{\n        e.preventDefault();\n        this.callApi(this.state.tempContent);\n        this.setState({\n            content: this.state.tempContent\n        })\n        console.log(this.state.content);\n        \n    }\n\n    render() {     \n        const {days} = this.state;\n        console.log(days);\n        var i=0;\n        const dayList = [];\n        var j=0;\n        var tempMin = 100;\n        var tempMax = -100;\n        for(i;i<days.length;i++){\n            if(days[i].main.temp_min<tempMin)\n                tempMin = days[i].main.temp_min;\n            if(days[i].main.temp_max>tempMax)\n                tempMax = days[i].main.temp_max;\n            if(i===6 || i===14 || i===22 || i===30 || i===38)\n            {\n                dayList[j]= {dt_txt: days[i].dt_txt, temp_min: tempMin, temp_max: tempMax, icon: days[i].weather[0].icon};\n                j++;\n                tempMin = 100;\n                tempMax = -100;\n            }          \n        }\n        console.log(dayList);\n        // console.log(this.returnDay(new Date(days.list[0])));\n        const dayInformation = dayList.length ? (\n            dayList.map(day =>{\n                return (\n                    \n                    <div className=\"day\" key={day.dt_txt}>\n                        <Link to=\"/hourly\">\n                            <h3>{moment(day.dt_txt).format('ddd')}</h3>\n                            <p>Low: {day.temp_min}&deg; F</p>\n                            <p>High: {day.temp_max}&deg; F</p>\n                            <img src={\"http://openweathermap.org/img/wn/\"+day.icon+\"@2x.png\"} />\n                         </Link>\n                    </div>\n                   \n                )\n            })\n        ) : (\n            <div className=\"center\">No posts yet</div>\n        );\n\n        \n        console.log(\"In render:\", this.state.content);\n        return (\n            <div className=\"container\">\n            <br/>\n                <form className=\"col s12\" onSubmit={this.handleSubmit}>\n                    <div className=\"row\">\n                        <div className=\"input-field col s4 offset-s4\">     \n                            <input id=\"city\" type=\"text\" className=\"validate\" onChange={this.handleChange}></input>\n                            <label for=\"city\" className=\"active\">Enter a City</label>\n                        </div>\n                    </div>\n                </form>\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-md-offset-4\">\n                        <div className=\"weather\">\n                            <div className=\"current\">\n                                <div className=\"info\">\n                                    <div>&nbsp;</div>\n                                    <div className=\"city\">{this.state.content}</div>\n                                    <div className=\"temp\">{this.state.current.temp}&deg; <small>F</small><br/>\n                                    <span className=\"feels\"><small><small>Feels like:</small></small>{this.state.current.feels_like}&deg; <small>F</small></span>\n                                    </div>\n                                    <div className=\"wind\"><small><small>Wind:</small></small> {this.state.current.wind} miles/hour</div>\n                                    <div>&nbsp;</div>\n                                </div>\n                                <div className=\"icon\">\n                                    <p><FontAwesomeIcon icon={faSun} size=\"2x\" color=\"yellow\"/></p>\n                                     {/* <img src={\"http://openweathermap.org/img/wn/\"+this.state.current.icon+\"@2x.png\"} /> */}\n                                </div>\n                            </div>\n                            <div className=\"future\">\n                                {dayInformation}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) =>{\n    return{\n        city: state.city\n    }\n}\n\nexport default connect(mapStateToProps)(WeatherDay)"]},"metadata":{},"sourceType":"module"}