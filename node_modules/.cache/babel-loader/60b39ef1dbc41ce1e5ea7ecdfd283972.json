{"ast":null,"code":"var _jsxFileName = \"/Users/priyamsuthar/Documents/React/react-redux-complete-playlist-lesson-3/weather-forecast/src/WeatherDay.js\";\nimport React, { Component } from 'react';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun } from '@fortawesome/free-solid-svg-icons';\nimport axios from 'axios';\nimport moment from 'moment';\nexport default class WeatherDay extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      days: []\n    };\n\n    this.returnDay = date => {\n      const count = date.getUTCDay();\n\n      switch (count) {\n        case 0:\n          return \"Sun\";\n\n        case 1:\n          return \"Mon\";\n\n        case 2:\n          return \"Tue\";\n\n        case 3:\n          return \"Wed\";\n\n        case 4:\n          return \"Thu\";\n\n        case 5:\n          return \"Fri\";\n\n        case 6:\n          return \"Sat\";\n      }\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://api.openweathermap.org/data/2.5/forecast?q=Boston&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial').then(res => {\n      console.log(res);\n      this.setState({\n        days: res.data.list\n      });\n    });\n  }\n\n  render() {\n    const {\n      days\n    } = this.state;\n    console.log(days); // console.log(this.returnDay(new Date(days.list[0])));\n\n    const dayInformation = days.length ? days.map(day => {\n      return React.createElement(\"div\", {\n        className: \"day\",\n        key: day.dt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, console.log(\"New day:\", moment(day.dt_txt).format('dddd')), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, \"Low: \", day.min, \"\\xB0 F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"High: \", day.max, \"\\xB0 F\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, React.createElement(FontAwesomeIcon, {\n        icon: faSun,\n        size: \"1x\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, \"No posts yet\");\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-md-4 col-md-offset-4\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"weather\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"current\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"info\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"\\xA0\"), React.createElement(\"div\", {\n      className: \"city\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Boston\"), React.createElement(\"div\", {\n      className: \"temp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"67\\xB0 \", React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"F\")), React.createElement(\"div\", {\n      className: \"wind\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"small\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"WIND:\")), \" 22 km/h\"), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\xA0\")), React.createElement(\"div\", {\n      className: \"icon\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faSun,\n      size: \"2x\",\n      color: \"yellow\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"future\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, dayInformation)))));\n  }\n\n}","map":{"version":3,"sources":["/Users/priyamsuthar/Documents/React/react-redux-complete-playlist-lesson-3/weather-forecast/src/WeatherDay.js"],"names":["React","Component","FontAwesomeIcon","faSun","axios","moment","WeatherDay","state","days","returnDay","date","count","getUTCDay","componentDidMount","get","then","res","console","log","setState","data","list","render","dayInformation","length","map","day","dt","dt_txt","format","min","max"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSun } from '@fortawesome/free-solid-svg-icons'\nimport axios from 'axios'\nimport moment from 'moment'\n\nexport default class WeatherDay extends Component {\n    // state = {\n    //     currentWeather : '24',\n    //     days : [\n    //         {id:'1',day: 'Mon', min: '13', max:'34'},\n    //         {id:'2',day: 'Tue', min: '13', max:'34'},\n    //         {id:'3',day: 'Wed', min: '13', max:'34'},\n    //         {id:'4',day: 'Thu', min: '13', max:'34'},\n    //         {id:'5',day: 'Fri', min: '13', max:'34'},\n    //     ]\n    // }\n    state = {\n        days: []\n    }\n    componentDidMount(){\n        axios.get('http://api.openweathermap.org/data/2.5/forecast?q=Boston&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial')\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    days: res.data.list\n                })\n            })\n\n    }\n\n    returnDay = (date) =>{\n        const count = date.getUTCDay();\n        switch(count){\n            case 0:\n                return \"Sun\";\n            case 1:\n                return \"Mon\";\n            case 2:\n                return \"Tue\";\n            case 3:\n                return \"Wed\";\n            case 4:\n                return \"Thu\";\n            case 5:\n                return \"Fri\";\n            case 6:\n                return \"Sat\";\n        }\n    }\n\n    render() {\n\n        \n        const {days} = this.state;\n        console.log(days);\n        // console.log(this.returnDay(new Date(days.list[0])));\n        const dayInformation = days.length ? (\n            days.map(day =>{\n                return (\n                    <div className=\"day\" key={day.dt}>\n                    {console.log(\"New day:\",moment(day.dt_txt).format('dddd'))}\n                       <h3>{}</h3>\n                            {/* <Link to={'/'+day.id}> */}\n                                {/* <span className=\"card-title red-text\">{day.name}</span> */}\n                            {/* </Link> */}\n                        <p>Low: {day.min}&deg; F</p>\n                        <p>High: {day.max}&deg; F</p>\n                        <p><FontAwesomeIcon icon={faSun} size=\"1x\"/></p>\n                       \n                    </div>\n                )\n            })\n        ) : (\n            <div className=\"center\">No posts yet</div>\n        );\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-md-4 col-md-offset-4\">\n                        <div className=\"weather\">\n                            <div className=\"current\">\n                                <div className=\"info\">\n                                    <div>&nbsp;</div>\n                                    <div className=\"city\">Boston</div>\n                                    <div className=\"temp\">67&deg; <small>F</small></div>\n                                    <div className=\"wind\"><small><small>WIND:</small></small> 22 km/h</div>\n                                    <div>&nbsp;</div>\n                                </div>\n                                <div className=\"icon\">\n                                    <FontAwesomeIcon icon={faSun} size=\"2x\" color=\"yellow\"/>\n                                </div>\n                            </div>\n                            <div className=\"future\">\n                                {dayInformation}\n                                {/* <div className=\"day\">\n                                    <h4>MONDAY</h4>\n                                    <p><FontAwesomeIcon icon={faSun} size=\"2x\"/></p>\n                                    <div>\n                                        <p>Low: 23&deg; F</p>\n                                        <p>High: 77&deg; F</p>\n                                    </div>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Tue</h3>\n                                    <p><span className=\"wi-showers\"></span></p>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Wed</h3>\n                                    <p><span className=\"wi-rain\"></span></p>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Mon</h3>\n                                    <p><FontAwesomeIcon icon={faSun} size=\"2x\"/></p>\n                                </div>\n                                <div className=\"day\">\n                                    <h3>Mon</h3>\n                                    <p><FontAwesomeIcon icon={faSun} size=\"2x\"/></p>\n                                </div> */}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}