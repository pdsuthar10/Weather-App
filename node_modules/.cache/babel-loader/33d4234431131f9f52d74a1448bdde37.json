{"ast":null,"code":"var _jsxFileName = \"/Users/priyamsuthar/Documents/React/react-redux-complete-playlist-lesson-3/weather-forecast/src/Hourly.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport moment from 'moment';\nimport { Link } from 'react-router-dom';\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons';\nexport default class Hourly extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      dayInformation: []\n    };\n\n    this.handleClick = e => {\n      // this.props.location.props.updateCity(this.props.location.state.city)\n      this.props.history.push(\"/\");\n    };\n\n    this.tConvert = time => {\n      // Check correct time format and split into components\n      time = time.toString().match(/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n      if (time.length > 1) {\n        // If time format correct\n        time = time.slice(1); // Remove full string match value\n\n        time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n\n        time[0] = +time[0] % 12 || 12; // Adjust hours\n      }\n\n      console.log(time);\n      return time[0] + \" \" + time[5]; // return adjusted time or original string\n    };\n  }\n\n  componentDidMount() {\n    const city = this.props.city;\n    console.log(city);\n    axios.get('http://api.openweathermap.org/data/2.5/forecast?q=' + city + '&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial').then(res => {\n      console.log(res);\n      this.setState({\n        dayInformation: res.data.list\n      });\n    });\n  }\n\n  render() {\n    const {\n      dayInformation\n    } = this.state;\n    const tempDay = [];\n    var j = 0;\n    var i = 0; //console.log(this.props);\n\n    var date2 = this.props.location.state.date.split(' ');\n    console.log(date2);\n\n    for (i; i < dayInformation.length; i++) {\n      let date1 = dayInformation[i].dt_txt.split(' ');\n      if (date1[0] === date2[0]) tempDay[j++] = dayInformation[i];\n    }\n\n    console.log(\"In hourly\");\n    console.log(tempDay);\n    const dayCards = tempDay.length ? tempDay.map(day => {\n      return React.createElement(\"div\", {\n        className: \"col s12 m3\",\n        key: day.dt_txt,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card opacity medium blue darken-1\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"card-content white-text\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, console.log(day.weather[0].main), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }, this.tConvert(day.dt_txt.split(' ')[1])), React.createElement(\"span\", {\n        className: \"card-title bold\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, day.weather[0].main), React.createElement(\"img\", {\n        src: \"http://openweathermap.org/img/wn/\" + day.weather[0].icon + \"@2x.png\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, day.main.temp, \"\\xB0\"), \" \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, \"F\")), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Feels like: \", day.main.feels_like, \"\\xB0 \", React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"F\")))));\n    }) : React.createElement(\"div\", {\n      className: \"center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"No posts yet\");\n    console.log(this.props);\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faChevronLeft,\n      style: {\n        fontSize: \"50px\",\n        color: \"blue\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"h4\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, moment(this.props.location.state.date).format(\"dddd, MMMM Do YYYY\")), React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, dayCards));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    city: state.city\n  };\n};","map":{"version":3,"sources":["/Users/priyamsuthar/Documents/React/react-redux-complete-playlist-lesson-3/weather-forecast/src/Hourly.js"],"names":["React","Component","axios","moment","Link","FontAwesomeIcon","faChevronLeft","Hourly","state","dayInformation","handleClick","e","props","history","push","tConvert","time","toString","match","length","slice","console","log","componentDidMount","city","get","then","res","setState","data","list","render","tempDay","j","i","date2","location","date","split","date1","dt_txt","dayCards","map","day","weather","main","icon","temp","feels_like","fontSize","color","format","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport axios from 'axios'\nimport moment from 'moment'\nimport { Link } from 'react-router-dom'\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faChevronLeft } from '@fortawesome/free-solid-svg-icons'\n\nexport default class Hourly extends Component {\n\n    state={\n        dayInformation: []\n    }\n\n    componentDidMount(){\n        const city = this.props.city;\n        console.log(city);\n        axios.get('http://api.openweathermap.org/data/2.5/forecast?q='+city+'&appid=57808ae0e0093dd410d6cf81f988f653&units=imperial')\n            .then(res => {\n                console.log(res)\n                this.setState({\n                    dayInformation: res.data.list\n                })\n            })\n    }\n\n    handleClick = (e) =>{\n       // this.props.location.props.updateCity(this.props.location.state.city)\n        this.props.history.push(\"/\")\n       \n    }\n\n    tConvert = (time) =>{\n        // Check correct time format and split into components\n        time = time.toString ().match (/^([01]\\d|2[0-3])(:)([0-5]\\d)(:[0-5]\\d)?$/) || [time];\n\n        if (time.length > 1) { // If time format correct\n            time = time.slice (1);  // Remove full string match value\n            time[5] = +time[0] < 12 ? 'AM' : 'PM'; // Set AM/PM\n            time[0] = +time[0] % 12 || 12; // Adjust hours\n        }\n        console.log(time);\n        return time[0]+\" \"+time[5]; // return adjusted time or original string\n    }\n\n    \n    \n    render() {\n        const { dayInformation } = this.state;\n        const tempDay = []\n        var j=0;\n        var i=0;\n        //console.log(this.props);\n        var date2 = this.props.location.state.date.split(' ');\n        console.log(date2);\n        for(i;i<dayInformation.length;i++){\n            let date1 = dayInformation[i].dt_txt.split(' ');\n                if(date1[0] === date2[0])\n                    tempDay[j++] = dayInformation[i];\n        }\n        console.log(\"In hourly\");\n        console.log(tempDay);\n        const dayCards = tempDay.length ? (\n        tempDay.map(day=>{\n            return(\n                <div className=\"col s12 m3\" key={day.dt_txt}>\n                    <div className=\"card opacity medium blue darken-1\">\n                        <div className=\"card-content white-text\">\n                        {console.log(day.weather[0].main)}\n                            <h5>{this.tConvert(day.dt_txt.split(' ')[1])}</h5>\n                            <span className=\"card-title bold\">{day.weather[0].main}</span>\n                            <img src={\"http://openweathermap.org/img/wn/\"+day.weather[0].icon+\"@2x.png\"} />\n                            \n                            <h5><strong>{day.main.temp}&deg;</strong> <small>F</small></h5>\n                            <h5>Feels like: {day.main.feels_like}&deg; <small>F</small></h5>\n                        </div>\n                    </div>\n                </div>\n            )\n        })\n    ):(\n         <div className=\"center\">No posts yet</div>\n    );\n        console.log(this.props);\n        return (\n            <div className=\"container\">\n            {/* <Link to=\"/\" style={{\n                position: \"absolute\",\n                top: \"48%\",   \n                left: \"10%\"        */}\n            <button onClick={this.handleClick}>\n            <FontAwesomeIcon icon={faChevronLeft} style={\n                {\n                    fontSize: \"50px\",\n                    color: \"blue\"\n                }\n            }/></button>\n            {/* </Link> */}\n                <h4>{moment(this.props.location.state.date).format(\"dddd, MMMM Do YYYY\")}</h4>\n                <div className=\"row\">\n                    {dayCards}\n                </div>    \n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) =>{\n    return{\n        city: state.city\n    }\n}\n"]},"metadata":{},"sourceType":"module"}